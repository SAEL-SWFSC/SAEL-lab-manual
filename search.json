[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab Manual",
    "section": "",
    "text": "This lab manual serves as the go-to handbook for the behind-the-scenes information to support our science."
  },
  {
    "objectID": "content/Inventory.html",
    "href": "content/Inventory.html",
    "title": "Inventory",
    "section": "",
    "text": "Add Content Here"
  },
  {
    "objectID": "content/SharedValues-BestPractices.html",
    "href": "content/SharedValues-BestPractices.html",
    "title": "Shared Values and Best Practices",
    "section": "",
    "text": "Add Content Here"
  },
  {
    "objectID": "content/GithubBook.html",
    "href": "content/GithubBook.html",
    "title": "Github Book",
    "section": "",
    "text": "You can create your own website that looks like a ‘book’ by copying an existing template in Github and editing it in RStudio.\n\nPrepare to do Great Things!\n\nLoad Software: Github Desktop\nLoad Software: RStudio (v2022.07.2 build 576 or later)\nLoad Software: R\nCreate a Github Login\n\nCopy a template of Great Things!\nCopy an existing template to your own Github account. Go to NOAA Quarto Template and copy template to your Github Repository following the directions on the README.md. Give it an appropriate name and make sure it is PUBLIC.\nCopy to your desktop to make it a Greater Thing!\nUsing Github Desktop, Clone repository using URL (File-> Clone Repository). Copy the URL of your repository site (the URL of your copy of the Great Things Repository on your github account), and save project to your Documents-> Github folder (use defaults). See this Introduction to Git/Github tutorial for more help.\nUse RStudio to Modify Great Thing to make it Greater!\nIn RStudio, in the top right corner, select the project dropdown to Add New R Project from an Existing Project– and browse to select the appropriate folder in Documents-> Github. Examine the documents:\n\nREADME.md\nThis is the README file that will appear on your repository page.\nindex.qmd\nThis will serve as your ‘home’ page for the web-book that is created\ncontents folder\nThis folder will contain the ‘pages’ (chapters) for your web-book\n_quarto.yml\nThis will define the layout of your web-book\n(Insert picture of Layout)\n\nModify README.md\nIf you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nModify and Rename files in Contents Folder\nEach of the existing qmd (Quarto) files in the contents folder have additional instructions to help you format your ‘book’ in Quarto. You may want to keep them, or you can always review the original template web-page for this information. Read the ‘Add Content’ page here to understand the minimal information you need for each of these pages in your contents folder.\nFor each page in your website (or chapter in your book), you will want to have a qmd file in this folder. You can open one of the existing qmd files and File-> Save As and save it as another name. Retain the minimal information needed for your page (see the Add Contents page), and then add your content using either the source code or visual editor. Make sure you SAVE each file when you are finished!\nModify _quarto.yml file\nThe _quarto.yml file identifies the structure of the web-book. Make changes to the website (Title, site & repo URL), the Sidebar (link to your preferred logo, link the globe icon to your website and link the github icon to your github URL and rename both of these). Finally– you will want to identify the contents.\nThe contents are each of your chapters (or web- pages). Each chapter has two lines of information:\n\nhref: refers to the name of the relevant qmd file (located in the contents folder).\ntext: this is the text you will see on the sidebar of the web-book.\nThe first contents page (home page) will link to the index.qmd file (in the main folder). The others will be in the contents folder, and therefore their name should be ‘contents/filename.qmd’ (where filename is the name of that qmd file).\n\nRender & View the Web-book\nTo Render the document, open the index.qmd file (in the main folder) and click on the ‘Render’ icon near the top (to the right of the save button). Look in the Terminal (lower left section of RStudio) for any errors. Most errors may be due to typos or unsaved modifications. If you still have errors, save everything & reopen RStudio & run again. If you still have errors, go through file by file!\nTo view the rendered document, open the _site folder, click on the index.html and select ‘View in Web Browser’. Ensure that everything looks as you would expect. You may need to modify, render, view, repeat until it is good. Be sure your project is saved.\nCommit & Push to Github\nOpen Github Desktop and open your project (if it is not already opened). Github desktop will identify the changes you made. At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out your Great Things!"
  },
  {
    "objectID": "content/ProjectManagement.html",
    "href": "content/ProjectManagement.html",
    "title": "Project Management",
    "section": "",
    "text": "Add Content Here"
  },
  {
    "objectID": "content/Intro-Acoustics.html",
    "href": "content/Intro-Acoustics.html",
    "title": "Introduction to Acoustics",
    "section": "",
    "text": "##Intro to Acoustics (Anne) Add Content Here\n##Intro to Pamguard (Cory) Add Content Here\n##Intro to PAMpal (Taiki) Add Content Here"
  },
  {
    "objectID": "content/WritersWorkshop.html",
    "href": "content/WritersWorkshop.html",
    "title": "Writers Workshop",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.\n\nHave all your materials ready before the workshop begins. Identify a small manageable chunk of writing to complete during the workshop. For example, I will work on paragraph 3 of my introduction. If I have extra time, I will begin on my methods.\nTurn off ALL distractions (no email or web browser, turn off phone, etc)\nFirst 5 minutes of workshop– everyone briefly introduces the work they hope to complete in the first 90 min of the workshop.\nSelect a person to keep the time– they will give a 5 minute warning before the end of the 90 minutes.\nWork on your section with videos on, and your sound muted. Stay focused on your one specific goal and avoid all distractions. Do not do anything that would distract the others from their work.\nAt 90 min mark, everyone briefly discuss how things went (if they had any obstacles). Take a 15 minute break\nEveryone briefly discuss what they will do for the final 60 min of the workshop (one manageable chunk of writing). Identify a person to keep the time. Work quietly (with videos on, sound muted) until the 5 minute warning is given.\nEveryone give a brief update on what they accomplished, how they feel about their work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/WritingGuide.html",
    "href": "content/WritingGuide.html",
    "title": "Writing Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to writing that parallels the path of your research to improve efficiency and allow for reproducible research.\n\nCreate a Github Repository for your research\nCreate a draft manuscript using a preferred template in R Markdown/Quarto [Shannon will work out these methods soon]\nIntroduction: As you review literature, add relevant information to the appropriate paragraph in your introduction, and add citation to References. From the beginning, write in your own works (they need to be clear, but not necessarily well written yet!). If you copy words verbatim, then put in quotes and provide link to reference to be sure you know these are not your own words. The goal is to start putting down relevant information as you come across it– not to write pretty. You can clean up/edit at a later stage.\nReferences: Use Zotero for references (more later!). As you come across literature, put your references in Zotero and cite in your manuscript.\nMethods (Draft): For your initial draft manuscript, explicitly input your entire methods (in excruciating detail!) for future reference. Keep track of changes (and reasons for changes) using Issues in Github. Note to Self: We may want to create a separate RMarkdown for super-detailed methods (with version control?), and then cherry pick from this for our final paper methods.\nResults: Remember, results are just the facts!\nDiscussion: If results are the facts, the discussion can provide more information as to the WHY behind your results (and context!). There is (mostly) a strict demarcation between the two sections. Discussion is where the juicy bits go.\nAcknowledgements: As your research progresses, be sure to add people, funders, etc to your acknowledgements.\n\nThings to remember as you write:\n\nWriting is hard. Do not try to write the perfect words– instead, get the information down. It is much easier to write ideas and then edit them later to make them sound smart than it is to write it all down perfectly the first time.\nIdentify Co-authors: This can be tricky. Everyone approaches this a little differently, but these guidelines can serve as a reasonably standard approach. Discuss early on with your team and as you work with others on your project. If you use guidelines to make your co-author decisions, then this can help alleviate sticky situations related to co-authorship.\nBe consistent in EVERYTHING, including your approach to topics in the Intro/Methods/Results/Discussion.\nDo not use subheadings for each paragraph. If you use subheadings, make sure they are consistent across sections (methods, results, and possibly discussion).\nFollow the rules! (Authors guidelines for your journal)\nGet Help! Do not wait for the final draft before you share with others. Get help early on to minimize time wasted in re-doing work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/Safety.html",
    "href": "content/Safety.html",
    "title": "Safety",
    "section": "",
    "text": "Add Content Here"
  },
  {
    "objectID": "content/Safety.html#field-safety",
    "href": "content/Safety.html#field-safety",
    "title": "Safety",
    "section": "Field Safety",
    "text": "Field Safety\nAdd Content Here"
  }
]